{% extends 'base.html.twig' %}

{% block title %}Hello VehicleController!{% endblock %}

{% block body %}
<style>
    .even-row {
        background-color: gray !important /* Couleur de fond pour les lignes paires */
    }

    .odd-row {
        background-color: #ffffff !important /* Couleur de fond pour les lignes impaires */
    }
</style>

 <div class="container">
    <h1>Liste de véhicules</h1>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>mark</th>
                <th>model</th>
                <th>registrationNumber</th>
                <th>characteristics</th>
                <th>registrationDate</th>
                <th>owner</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            {% for vehicle in vehicles %}
            {% set rowClass = cycle(['even-row', 'odd-row'], loop.index0) %}
                <tr class="{{ rowClass }}">
                    <td class="{{ rowClass }}">{{ loop.index }}</td>
                    <td contenteditable="true" data-vehicle-id="{{ vehicle.id }}" data-field="mark">{{ vehicle.mark }}</td>
                    <td contenteditable="true" data-vehicle-id="{{ vehicle.id }}" data-field="model">{{ vehicle.model  }}</td>
                    <td contenteditable="true" data-vehicle-id="{{ vehicle.id }}" data-field="registrationNumber">{{ vehicle.registrationNumber  }}</td>
                    <td contenteditable="true" data-vehicle-id="{{ vehicle.id }}" data-field="characteristics">{{ vehicle.characteristics }}</td>
                    <td>
                        <input type="date" value="{{ vehicle.registrationDate|date('Y-m-d') }}" data-vehicle-id="{{ vehicle.id }}" data-field="registrationDate">
                    </td>
                    <td>
                        <select data-vehicle-id="{{ vehicle.id }}" data-field="owner">
                            {% for owner in owners %}
                                <option value="{{ owner.id }}" {% if vehicle.owner and vehicle.owner.id == owner.id %}selected{% endif %}>
                                    {{ owner.lastname }}
                                </option>
                            {% endfor %}
                        </select>
                    </td>
                    <td>
                        <a href="{{ path('vehicle_delete', {'id': vehicle.id}) }}" class="btn btn-danger btn-sm" onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce véhicule ?')">Supprimer</a>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
<script>
    const flashMessages = document.querySelectorAll('.alert');
    const flashMessagesContainer = document.getElementById('flash-messages');

    document.addEventListener('DOMContentLoaded', function() {
        const editableCells = document.querySelectorAll('[contenteditable="true"]');

        editableCells.forEach(cell => {
            let originalValue = cell.innerText.trim(); // Valeur originale de la cellule

            cell.addEventListener('blur', function() {
                const vehicleId = this.dataset.vehicleId;
                const field = this.dataset.field;
                const value = this.innerText.trim();

                if (value !== originalValue) {
                // Envoi de la requête AJAX pour mettre à jour le propriétaire
                fetch(`/vehicle/edit/${vehicleId}`, {
                    method: 'PATCH', // Utilisez PATCH pour les mises à jour partielles
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        [field]: value
                    })
                })
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    if (data.status === 'error') {
                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-danger');
                        throw new Error('Erreur lors de la mise à jour du véhicule.');
                    }

                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-success');
                    // Redirection vers la liste des propriétaires après la mise à jour réussie
                    window.location.href = '{{ path('vehicle_list') }}';
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    // Optionnel : Afficher un message d'erreur à l'utilisateur
                });
                // Mettre à jour la valeur originale après la modification
                originalValue = value;
                }
            });
        });


        const ownerSelects = document.querySelectorAll('select[data-field="owner"]');
            ownerSelects.forEach(select => {
                select.addEventListener('change', function () {
                    const vehicleId = select.dataset.vehicleId;
                    const fieldName = select.dataset.field;
                    const fieldValue = select.value;

                    fetch(`/vehicle/edit/${vehicleId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ [fieldName]: fieldValue }),
                    })
                    .then(response => response.json())
                    .then(data => {
                    console.log(data)
                    if (data.status === 'error') {
                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-danger');
                        throw new Error('Erreur lors de la mise à jour du véhicule.');
                    }

                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-success');
                    // Redirection vers la liste des propriétaires après la mise à jour réussie
                    window.location.href = '{{ path('vehicle_list') }}';
                    })
                    .catch(error => {
                        alert('Error: ' + error);
                    });
                });
            });

         const dateInputs = document.querySelectorAll('input[type="date"]');
            dateInputs.forEach(input => {
                input.addEventListener('change', function () {
                    const vehicleId = input.dataset.vehicleId;
                    const fieldName = input.dataset.field;
                    const fieldValue = input.value;

                    fetch(`/vehicle/edit/${vehicleId}`, {
                        method: 'PATCH',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ [fieldName]: fieldValue }),
                    })
                    .then(response => response.json())
                    .then(data => {
                    console.log(data)
                    if (data.status === 'error') {
                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-danger');
                        throw new Error('Erreur lors de la mise à jour du véhicule.');
                    }

                        // Parcourir chaque message flash
                        flashMessages.forEach(function(message) {
                            // Vérifier le contenu du message et changer le texte en conséquence
                                message.textContent = data.message;
                        });
                        flashMessagesContainer.classList.add('alert-success');
                    // Redirection vers la liste des propriétaires après la mise à jour réussie
                    window.location.href = '{{ path('vehicle_list') }}';
                    })
                    .catch(error => {
                        alert('Error: ' + error);
                    });
                });
            });



    });
</script>
{% endblock %}
